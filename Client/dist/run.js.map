{"version":3,"sources":["webpack:///./web/run/run.js","webpack:///./web/run/store.js"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,kBAAkB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;AACD;AACA;AACA,CAAC,C;;;;;;;;ACrRD;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,oCAAoC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4BAA4B,mCAAmC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,mCAAmC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,gBAAgB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,aAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,aAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,aAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,gBAAgB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,aAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,sBAAsB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,qCAAqC,WAAW;AAChD;AACA;AACA,gCAAgC,aAAa;AAC7C;AACA;AACA;AACA,oCAAoC,qBAAqB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,aAAa;AACrD;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa;AACb,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB;AACraAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,yCAAyC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,CAAC,C","file":"run.js","sourcesContent":["/**\n * Created by sunxin on 2017/1/9.\n */\nvar mainNav=require(\"../component/mainNav.vue\")\nvar runQuery=require(\"../component/runQuery.vue\")\nvar runHeader=require(\"../component/runHeader.vue\")\nvar runBody=require(\"../component/runBody.vue\")\nvar runParam=require(\"../component/runParam.vue\")\nvar encrypt=require(\"../component/encrypt.vue\")\nvar runInject=require(\"../component/runInject.vue\")\nvar store=require(\"./store\")\nif((!session.get(\"interfaceId\") || !session.get(\"groupId\")) && location.hash.length<=1)\n{\n    alert(\"请从项目详情页进来!\");\n    location.href=\"../projectinfo/projectinfo.html\"\n}\nvar vue=new Vue({\n    el: \"#app\",\n    data: {\n        session:$.clone(session.raw()),\n        runPending:false\n    },\n    components:{\n        \"mainnav\":mainNav,\n        \"runquery\":runQuery,\n        \"runheader\":runHeader,\n        \"runbody\":runBody,\n        \"runparam\":runParam,\n        \"encrypt\":encrypt,\n        \"runinject\":runInject\n    },\n    store:store,\n    computed:{\n        interface:function () {\n            return store.state.interface;\n        },\n        baseUrl:{\n            get:function () {\n                return store.state.baseUrl;\n            },\n            set:function (val) {\n                store.commit(\"setBaseUrl\",val);\n            }\n        },\n        paramTab:function () {\n            return \"Param (\"+store.getters.paramCount+\")\";\n        },\n        queryTab:function () {\n            return \"Query (\"+store.getters.queryCount+\")\";\n        },\n        headerTab:function () {\n            return \"Header (\"+store.getters.headerCount+\")\";\n        },\n        bodyTab:function () {\n            return \"Body (\"+(store.state.bodyInfo.type==0?store.getters.bodyCount:\"Raw\")+\")\";\n        },\n        param:function () {\n            return store.state.param\n        },\n        querySave:function () {\n            return store.getters.querySave\n        },\n        headerSave:function () {\n            return store.getters.headerSave\n        },\n        bodySave:function () {\n            return store.getters.bodySave\n        },\n        drawMix:function () {\n            return store.state.drawMix\n        },\n        bodyInfo:function () {\n            return store.state.bodyInfo\n        },\n        queryRawShow:function () {\n            return store.state.queryRawShow;\n        },\n        headerRawShow:function () {\n            return store.state.headerRawShow;\n        },\n        bodyRawShow:function () {\n            return store.state.bodyRawShow;\n        },\n        status:function () {\n            return store.state.status;\n        },\n        second:function () {\n            return store.state.second;\n        },\n        type:function () {\n            return store.state.type;\n        },\n        draw:function () {\n            return store.state.draw;\n        },\n        drawMix:function () {\n            return store.state.drawMix;\n        },\n        imgUrl:function () {\n            return store.state.imgUrl;\n        },\n        rawData:function () {\n            return store.state.rawData;\n        },\n        resHeader:function () {\n            return store.state.resHeader;\n        },\n        errorCount:function () {\n            return store.state.errorCount;\n        },\n        queryRawStr:{\n            get:function () {\n                return store.state.queryRawStr\n            },\n            set:function (val) {\n                store.commit(\"setQueryRawStr\",val);\n            }\n        },\n        headerRawStr:{\n            get:function () {\n                return store.state.headerRawStr\n            },\n            set:function (val) {\n                store.commit(\"setHeaderRawStr\",val);\n            }\n        },\n        bodyRawStr:{\n            get:function () {\n                return store.state.bodyRawStr\n            },\n            set:function (val) {\n                store.commit(\"setBodyRawStr\",val);\n            }\n        },\n    },\n    methods:{\n        run:function () {\n            var _this=this;\n            this.runPending=true;\n            store.dispatch(\"run\").then(function (data) {\n                _this.runPending=false;\n                if(data.code==200)\n                {\n                    $.notify(\"运行成功\",1);\n                }\n                else\n                {\n                    $.notify(data.msg,0);\n                }\n            })\n        },\n        save:function () {\n            store.dispatch(\"save\").then(function (data) {\n                if(data && data.code==0)\n                {\n                    $.notify(data.msg,0);\n                }\n            })\n        },\n        toggleQuery:function () {\n            store.commit(\"toggleQuery\");\n        },\n        toggleHeader:function () {\n            store.commit(\"toggleHeader\");\n        },\n        toggleBody:function () {\n            store.commit(\"toggleBody\");\n        },\n        changeUrl:function (val) {\n            store.commit(\"changeUrl\",val);\n        },\n        querySearch:function (queryString,cb) {\n            var _this=this;\n            setTimeout(function () {\n                var results=_this.interface.baseUrl.map(function (obj) {\n                    return {value:obj}\n                })\n                if(!store.state.hash)\n                {\n                    results.push({\n                        value:\"MockServer\"\n                    })\n                }\n                if(queryString)\n                {\n                    results=results.filter(function (obj) {\n                        return obj.value.toLowerCase().indexOf(queryString.toLowerCase()) > -1\n                    })\n                }\n                cb(results);\n            },100)\n        },\n        showAutoComplete:function (event) {\n            this.baseUrl=\"\";\n            setTimeout(function(){\n                event.target.nextSibling.focus();\n            },100)\n        },\n        getError:function (item) {\n            var ele=document.createElement(\"div\");\n            ele.innerHTML=item;\n            var errEle=ele.querySelector(\"[err]\");\n            return errEle.getAttribute(\"err\");\n        },\n        existError:function (item) {\n            var ele=document.createElement(\"div\");\n            ele.innerHTML=item;\n            var errEle=ele.querySelector(\"[err]\");\n            if(errEle)\n            {\n                return true;\n            }\n            else\n            {\n                return false;\n            }\n        },\n        changeMethod:function () {\n            store.commit(\"changeMethod\")\n        },\n        paste:function () {\n            setTimeout(function () {\n                var path=store.state.interface.url;\n                var arrStoreQuery=store.state.query;\n                arrStoreQuery.splice(0,arrStoreQuery.length);\n                var index=path.indexOf(\"?\");\n                if(index>-1)\n                {\n                    var arr=path.split(\"?\");\n                    if(arr[1])\n                    {\n                        var query=arr[1];\n                        var arrQuery=query.split(\"&\");\n                        for(var i=0;i<arrQuery.length;i++)\n                        {\n                            if(arrQuery[i])\n                            {\n                                var arrQuery1=arrQuery[i].split(\"=\");\n                                arrStoreQuery.push({\n                                    name:arrQuery1[0],\n                                    value:arrQuery1[1]?[decodeURIComponent(arrQuery1[1])]:[],\n                                    must:1,\n                                    remark:\"\",\n                                    selValue:arrQuery1[1]?decodeURIComponent(arrQuery1[1]):\"\",\n                                    enable:1\n                                })\n                            }\n                        }\n                    }\n                    store.state.interface.url=store.state.interface.url.substring(0,index);\n                }\n                else\n                {\n                    arrStoreQuery.push({\n                        name:\"\",\n                        must:0,\n                        remark:\"\",\n                        value:\"\",\n                        selValue:\"\",\n                        enable:1\n                    })\n                }\n            },100)\n        }\n    },\n    created:function () {\n        store.dispatch(\"init\").then(function (data) {\n            $.stopLoading()\n            if(data.code!=200)\n            {\n                $.notify(data.msg,0);\n            }\n        })\n    },\n})\n$.ready(function () {\n    $.startLoading();\n})\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./web/run/run.js\n// module id = 134\n// module chunks = 0","/**\n * Created by sunxin on 2017/2/28.\n */\nvar config=require(\"../util/config\")\nmodule.exports=new Vuex.Store({\n    state:{\n        interface:{},\n        baseUrl:\"\",\n        query:[{\n            name:\"\",\n            must:0,\n            remark:\"\",\n            value:\"\",\n            selValue:\"\",\n            enable:1\n        }],\n        header:[{\n            name:\"\",\n            value:\"\",\n            remark:\"\"\n        }],\n        body:[{\n            name:\"\",\n            type:0,\n            must:0,\n            remark:\"\",\n            value:\"\",\n            selValue:\"\",\n            enable:1\n        }],\n        param:[],\n        bodyInfo:{\n            type:0,\n            rawType:0,\n            rawTextRemark:\"\",\n            rawFileRemark:\"\",\n            rawText:\"\",\n        },\n        fileResult:\"\",\n        resHeader:[],\n        status:\"\",\n        second:\"\",\n        draw:[],\n        drawMix:[],\n        type:\"object\",\n        imgUrl:\"\",\n        hash:\"\",\n        resultData:\"\",\n        queryRawShow:0,\n        headerRawShow:0,\n        bodyRawShow:0,\n        queryRawStr:\"\",\n        headerRawStr:\"\",\n        bodyRawStr:\"\",\n        rawData:\"\",\n        encryptType:\"\",\n        errorCount:0\n    },\n    getters:{\n        querySave:function (state,getters) {\n            return state.query.filter(function (obj) {\n                if(obj.name && obj.enable)\n                {\n                    return true\n                }\n                else\n                {\n                    return false\n                }\n            })\n        },\n        headerSave:function (state,getters) {\n            return state.header.filter(function (obj) {\n                if(obj.name)\n                {\n                    return true\n                }\n                else\n                {\n                    return false\n                }\n            });\n        },\n        bodySave:function (state,getters) {\n            return state.body.filter(function (obj) {\n                if(obj.name && obj.enable)\n                {\n                    return true\n                }\n                else\n                {\n                    return false\n                }\n            })\n        },\n        queryCount:function (state,getters) {\n            return getters.querySave.length\n        },\n        headerCount:function (state,getters) {\n            return getters.headerSave.length\n        },\n        bodyCount:function (state,getters) {\n            return getters.bodySave.length\n        },\n        paramCount:function (state,getters) {\n            return state.param.length;\n        },\n    },\n    mutations:{\n        initData:function (state,data) {\n            state.interface=data;\n            state.baseUrl=data.baseUrl.length>0?data.baseUrl[0]:\"\";\n            if(state.interface.queryParam.length>0)\n            {\n                for(var i=0;i<state.interface.queryParam.length;i++)\n                {\n                    Vue.set(state.interface.queryParam[i],\"enable\",1);\n                    Vue.set(state.interface.queryParam[i],\"selValue\",\"\");\n                    if(state.interface.queryParam[i].value && state.interface.queryParam[i].value.length>0)\n                    {\n                        state.interface.queryParam[i].selValue=state.interface.queryParam[i].value[0];\n                    }\n                    else\n                    {\n                        state.interface.queryParam[i].selValue=\"\";\n                    }\n\n                }\n                state.query=state.interface.queryParam;\n            }\n            if(state.interface.bodyParam.length>0)\n            {\n                for(var i=0;i<state.interface.bodyParam.length;i++)\n                {\n                    Vue.set(state.interface.bodyParam[i],\"enable\",1);\n                    Vue.set(state.interface.bodyParam[i],\"selValue\",\"\");\n                    if(state.interface.bodyParam[i].value && state.interface.bodyParam[i].value.length>0)\n                    {\n                        state.interface.bodyParam[i].selValue=state.interface.bodyParam[i].value[0];\n                    }\n                    else\n                    {\n                        state.interface.bodyParam[i].selValue=\"\";\n                    }\n\n                }\n                state.body=state.interface.bodyParam;\n            }\n            if(state.interface.header.length>0)\n            {\n                state.header=state.interface.header;\n            }\n            if(state.interface.restParam.length>0)\n            {\n                for(var i=0;i<state.interface.restParam.length;i++)\n                {\n                    Vue.set(state.interface.restParam[i],\"selValue\",\"\");\n                    if(state.interface.restParam[i].value && state.interface.restParam[i].value.length>0)\n                    {\n                        state.interface.restParam[i].selValue=state.interface.restParam[i].value[0];\n                    }\n                    else\n                    {\n                        state.interface.restParam[i].selValue=\"\";\n                    }\n\n                }\n                state.param=state.interface.restParam;\n            }\n            if(state.interface.bodyInfo)\n            {\n                state.bodyInfo=state.interface.bodyInfo;\n                if(state.bodyInfo.rawText===undefined)\n                {\n                    Vue.set(state.bodyInfo,\"rawText\",\"\");\n                }\n                if(state.bodyInfo.rawTextRemark===undefined)\n                {\n                    Vue.set(state.bodyInfo,\"rawTextRemark\",\"\");\n                }\n                if(state.bodyInfo.rawFileRemark===undefined)\n                {\n                    Vue.set(state.bodyInfo,\"rawFileRemark\",\"\");\n                }\n            }\n        },\n        setFileResult:function (state,data) {\n            state.fileResult=data;\n        },\n        toggleQuery:function (state) {\n            if(state.queryRawShow)\n            {\n                state.queryRawShow=0;\n                var str=$.trim(state.queryRawStr);\n                var arr=[];\n                var param1=str.split(\"&\");\n                for(var i=0;i<param1.length;i++)\n                {\n                    var param2=param1[i].split(\"=\");\n                    if(param2.length>0)\n                    {\n                        var valueObj=helper.findValue(state.query,param2[0]);\n                        arr.push({\n                            name:param2[0],\n                            must:valueObj?valueObj.must:1,\n                            remark:valueObj?valueObj.remark:\"\",\n                            selValue:param2[1]?decodeURIComponent(param2[1]):\"\",\n                            enable:valueObj?valueObj.enable:1,\n                            value:valueObj?valueObj.value:null,\n                            encrypt:(valueObj && valueObj.encrypt)?valueObj.encrypt:{\n                                    type:\"\",\n                                    salt:\"\",\n                                    key:0\n                                }\n                        })\n                    }\n                }\n                state.query=arr;\n            }\n            else\n            {\n                state.queryRawShow=1;\n                var str=\"\",arr=state.query;\n                for(var i=0;i<arr.length;i++)\n                {\n                    if(arr[i].name)\n                    {\n                        str+=(arr[i].name+\"=\"+(encodeURIComponent(arr[i].selValue))+((i!=arr.length-1)?\"&\":\"\"))\n                    }\n                }\n                state.queryRawStr=str;\n            }\n        },\n        toggleHeader:function (state) {\n            if(state.headerRawShow)\n            {\n                state.headerRawShow=0;\n                var arr=$.trim(state.headerRawStr).split(\"\\n\");\n                var arrHeader=[];\n                for(var i=0;i<arr.length;i++)\n                {\n                    var line=$.trim(arr[i]);\n                    var index=line.indexOf(\":\");\n                    var key=\"\",value=\"\";\n                    if(index==-1)\n                    {\n                        key=line;\n                    }\n                    else\n                    {\n                        key=$.trim(line.substr(0,index));\n                        value=$.trim(line.substr(index+1));\n                    }\n                    if(key)\n                    {\n                        var obj=helper.findValue(state.header,key);\n                        arrHeader.push({\n                            name:key,\n                            value:value,\n                            remark:obj?obj.remark:\"\",\n                            encrypt:(obj && obj.encrypt)?obj.encrypt:{\n                                    type:\"\",\n                                    salt:\"\",\n                                    key:0\n                                }\n                        })\n                    }\n                }\n                if(arrHeader.length==0)\n                {\n                    arrHeader.push({\n                        name:\"\",\n                        value:\"\",\n                        remark:\"\"\n                    })\n                }\n                state.header=arrHeader;\n            }\n            else\n            {\n                state.headerRawShow=1;\n                var str=\"\",arr=state.header;\n                for(var i=0;i<arr.length;i++)\n                {\n                    if(arr[i].name)\n                    {\n                        str+=(arr[i].name+\":\"+(arr[i].value?arr[i].value:\"\")+((i!=arr.length-1)?\"\\n\":\"\"))\n                    }\n                }\n                state.headerRawStr=str;\n            }\n        },\n        toggleBody:function (state) {\n            if(state.bodyRawShow)\n            {\n                state.bodyRawShow=0;\n                var str=$.trim(state.bodyRawStr);\n                var arr=[];\n                var param1=str.split(\"&\");\n                for(var i=0;i<param1.length;i++)\n                {\n                    var param2=param1[i].split(\"=\");\n                    if(param2.length>0)\n                    {\n                        var valueObj=helper.findValue(state.body,param2[0]);\n                        var selValue=param2[1]?decodeURIComponent(param2[1]):\"\"\n                        if(valueObj && valueObj.type!=1)\n                        {\n                            valueObj.selValue=selValue;\n                        }\n                        arr.push({\n                            name:param2[0],\n                            type:valueObj?valueObj.type:(selValue==\"[FILE]\"?1:0),\n                            must:valueObj?valueObj.must:1,\n                            remark:valueObj?valueObj.remark:\"\",\n                            selValue:selValue,\n                            enable:valueObj?valueObj.enable:1,\n                            value:valueObj?valueObj.value:null,\n                            encrypt:(valueObj && valueObj.encrypt)?valueObj.encrypt:{\n                                    type:\"\",\n                                    salt:\"\",\n                                    key:0\n                                }\n                        })\n                    }\n                }\n                state.body=arr;\n            }\n            else\n            {\n                state.bodyRawShow=1;\n                var str=\"\",arr=state.body;\n                for(var i=0;i<arr.length;i++)\n                {\n                    if(arr[i].name)\n                    {\n                        str+=(arr[i].name+\"=\"+(arr[i].type==1?\"[FILE]\":encodeURIComponent(arr[i].selValue))+((i!=arr.length-1)?\"&\":\"\"))\n                    }\n                }\n                state.bodyRawStr=str;\n            }\n        },\n        changeMethod:function (state) {\n            if(state.interface.method==\"POST\" || state.interface.method==\"PUT\")\n            {\n                if(state.header.length==1 && !state.header[0].name)\n                {\n                    state.header[0].name=\"Content-Type\";\n                    state.header[0].value=\"application/x-www-form-urlencoded\"\n                }\n                else\n                {\n                    var bFind=false;\n                    for(var i=0;i<state.header.length;i++)\n                    {\n                        var obj=state.header[i];\n                        if(obj.name==\"Content-Type\")\n                        {\n                            bFind=true;\n                            break;\n                        }\n                    }\n                    if(!bFind)\n                    {\n                        state.header.push({\n                            name:\"Content-Type\",\n                            value:\"application/x-www-form-urlencoded\",\n                            remark:\"\"\n                        })\n                    }\n                }\n            }\n            else\n            {\n                for(var i=0;i<state.header.length;i++)\n                {\n                    var obj=state.header[i];\n                    if(obj.name==\"Content-Type\")\n                    {\n                        if(state.header.length>1)\n                        {\n                            state.header.splice(i,1);\n                        }\n                        else\n                        {\n                            state.header[0].name=\"\";\n                            state.header[0].value=\"\";\n                            state.header[0].remark=\"\";\n                        }\n                        break;\n                    }\n                }\n            }\n        },\n        changeUrl:function (state,val) {\n            if(val)\n            {\n                var arrParam=[];\n                var arr=val.match(/\\{([^\\s]+?)\\}/g);\n                if(arr)\n                {\n                    for(var i=0;i<arr.length;i++)\n                    {\n                        var str=arr[i].substr(1,arr[i].length-2);\n                        var bFind=false;\n                        for(var j=0;j<state.param.length;j++)\n                        {\n                            if(str==state.param[j].name)\n                            {\n                                bFind=true;\n                                arrParam.push(state.param[j]);\n                                break;\n                            }\n                        }\n                        if(!bFind)\n                        {\n                            arrParam.push({\n                                name:str,\n                                remark:\"\",\n                                value:[]\n                            })\n                        }\n                    }\n                }\n                state.param=arrParam;\n            }\n        },\n        setBaseUrl:function (state,val) {\n            state.baseUrl=val;\n        },\n        setQueryRawStr:function (state,val) {\n            state.queryRawStr=val;\n        },\n        setHeaderRawStr:function (state,val) {\n            state.headerRawStr=val;\n        },\n        setBodyRawStr:function (state,val) {\n            state.bodyRawStr=val;\n        }\n    },\n    actions:{\n        run:function (context) {\n            var method=context.state.interface.method;\n            var baseUrl=$.trim(context.state.baseUrl);\n            var path=$.trim(context.state.interface.url);\n            if(!method || !baseUrl || !path)\n            {\n                return new Promise(function (resolve,reject) {\n                    var obj={};\n                    obj.code=0;\n                    obj.msg=\"方法，url和路由地址不能为空!\"\n                    resolve(obj)\n                });\n            }\n            var bMock=false;\n            if(baseUrl!=\"MockServer\")\n            {\n                var indexHttp=baseUrl.indexOf(\"://\"),indexSlash;\n                if(indexHttp==-1)\n                {\n                    indexSlash=baseUrl.indexOf(\"/\")\n                }\n                else\n                {\n                    indexSlash=baseUrl.indexOf(\"/\",indexHttp+3);\n                }\n                if(indexSlash>-1)\n                {\n                    var baseUrlTemp=baseUrl.substring(0,indexSlash);\n                    var pathTemp=baseUrl.substr(indexSlash);\n                    if(pathTemp[pathTemp.length-1]==\"/\" && path[0]==\"/\")\n                    {\n                        pathTemp=pathTemp.substr(0,pathTemp.length-1);\n                    }\n                    else if(pathTemp[pathTemp.length-1]!=\"/\" && path[0]!=\"/\" && pathTemp.indexOf(\"?\")==-1 && pathTemp.indexOf(\"#\")==-1)\n                    {\n                        pathTemp+=\"/\"\n                    }\n                    baseUrl=baseUrlTemp;\n                    path=pathTemp+path;\n                }\n                else\n                {\n                    if(path[0]!=\"/\")\n                    {\n                        path=\"/\"+path;\n                    }\n                }\n            }\n            else\n            {\n                bMock=true;\n                baseUrl=config.baseUrl;\n                path=\"/mock/\"+session.get(\"projectId\")+(path[0]!=\"/\"?(\"/\"+path):path);\n            }\n            context.state.param.forEach(function (obj) {\n                if(obj.name)\n                {\n                    path=path.replace(\"{\"+obj.name+\"}\",obj.selValue)\n                }\n            })\n            var query={};\n            context.getters.querySave.forEach(function (obj) {\n                if(obj.encrypt && obj.encrypt.type)\n                {\n                    var value=helper.encrypt(obj.encrypt.type,obj.selValue,obj.encrypt.salt);\n                    var key=obj.name;\n                    if(obj.encrypt.key)\n                    {\n                        key=helper.encrypt(obj.encrypt.type,key,obj.encrypt.salt);\n                    }\n                    query[key]=value;\n                }\n                else\n                {\n                    query[obj.name]=obj.selValue;\n                }\n\n            })\n            var header={},arrHeaders=[\"host\",\"connection\",\"origin\",\"referer\",\"user-agent\"],objHeaders={};\n            context.getters.headerSave.forEach(function (obj) {\n                if(obj.encrypt && obj.encrypt.type)\n                {\n                    var value=helper.encrypt(obj.encrypt.type,obj.value,obj.encrypt.salt);\n                    var key=obj.name;\n                    if($.inArr(key,arrHeaders))\n                    {\n                        objHeaders[key]=value;\n                    }\n                    else\n                    {\n                        header[key]=value;\n                    }\n\n                }\n                else\n                {\n                    if($.inArr(obj.name,arrHeaders))\n                    {\n                        objHeaders[obj.name]=obj.value;\n                    }\n                    else\n                    {\n                        header[obj.name]=obj.value;\n                    }\n\n                }\n            })\n            var body={},bUpload=false;\n            if(method==\"POST\" || method==\"PUT\")\n            {\n                if(context.state.bodyInfo.type==0)\n                {\n                    var arr=document.getElementById(\"bodyTable\").querySelectorAll(\"[custom]\");\n                    context.getters.bodySave.forEach(function (obj,index) {\n                        if(obj.type==0)\n                        {\n                            if(obj.encrypt && obj.encrypt.type)\n                            {\n                                var value=helper.encrypt(obj.encrypt.type,obj.selValue,obj.encrypt.salt);\n                                var key=obj.name;\n                                if(obj.encrypt.key)\n                                {\n                                    key=helper.encrypt(obj.encrypt.type,key,obj.encrypt.salt);\n                                }\n                                body[key]=value;\n                            }\n                            else\n                            {\n                                body[obj.name]=obj.selValue;\n                            }\n                        }\n                        else if(obj.type==1)\n                        {\n                            if(arr[index].files.length>0)\n                            {\n                                if(obj.encrypt && obj.encrypt.type && obj.encrypt.key)\n                                {\n                                    var key=helper.encrypt(obj.encrypt.type,obj.name,obj.encrypt.salt);\n                                    body[key]=arr[index].files[0];\n                                }\n                                else\n                                {\n                                    body[obj.name]=arr[index].files[0];\n                                }\n                                bUpload=true;\n                            }\n                            else\n                            {\n                                if(obj.encrypt && obj.encrypt.type && obj.encrypt.key)\n                                {\n                                    var key=helper.encrypt(obj.encrypt.type,obj.name,obj.encrypt.salt);\n                                    body[key]=\"\";\n                                }\n                                else\n                                {\n                                    body[obj.name]=\"\";\n                                }\n\n                            }\n                        }\n                    })\n                }\n                else\n                {\n                    if(context.state.bodyInfo.rawType==0)\n                    {\n                        var encryptType=context.state.encryptType;\n                        if(encryptType)\n                        {\n                            body=helper.encrypt(encryptType,context.state.bodyInfo.rawText,document.getElementById(\"bodyRawEncryptSalt\").querySelector(\"input\").value)\n                        }\n                        else\n                        {\n                            body=context.state.bodyInfo.rawText;\n                        }\n                    }\n                    else\n                    {\n                        if(!context.state.fileResult)\n                        {\n                            return new Promise(function (resolve,reject) {\n                                var obj={};\n                                obj.code=0;\n                                obj.msg=\"上传内容不能为空！\";\n                                resolve(obj)\n                            });\n                        }\n                        body=context.state.fileResult;\n                    }\n                }\n            }\n            var beforeCode=$.trim(context.state.interface.before);\n            if(beforeCode)\n            {\n                helper.runBefore(beforeCode,baseUrl,path,method,query,header,body)\n            }\n            query=$.param(query);\n            if(query.length>0)\n            {\n                path=path+\"?\"+query;\n            }\n            header[\"__url\"]=baseUrl;\n            header[\"__path\"]=path;\n            header[\"__method\"]=method;\n            header[\"__user\"]=session.get(\"id\");\n            header[\"__headers\"]=JSON.stringify(objHeaders);\n            var proxyUrl=\"/proxy\";\n            var bNet=false;\n            if(/10\\./i.test(baseUrl) || /192\\.168\\./i.test(baseUrl) || /127\\.0\\.0\\.1/i.test(baseUrl) || /172\\.(16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31)\\./.test(baseUrl) || /localhost/i.test(baseUrl) && !bMock)\n            {\n                bNet=true;\n                proxyUrl=\"http://127.0.0.1:36742\";\n            }\n            var startDate=new Date();\n            var bContent=false,contentKey;\n            for(var key in header)\n            {\n                if(key.toLowerCase()==\"content-type\")\n                {\n                    bContent=true;\n                    contentKey=key;\n                    if(/multipart\\/form-data/i.test(header[contentKey]))\n                    {\n                        bUpload=true;\n                    }\n                    break\n                }\n            }\n            context.state.resultData=\"\";\n            var func;\n            if(bUpload || context.state.bodyInfo.type==1)\n            {\n                if(bContent && context.state.bodyInfo.type==0)\n                {\n                    delete header[contentKey];\n                }\n                func=net.upload(\"POST\",proxyUrl,body,header,null,1,bNet)\n            }\n            else\n            {\n                func=net.post(proxyUrl,body,header,null,1,bNet)\n            }\n            return func.then(function (result) {\n                context.state.resHeader=result.header;\n                context.state.status=String(result.status);\n                context.state.second=(((new Date())-startDate)/1000).toFixed(3);\n                context.state.type=typeof (result.data);\n                if(context.state.type==\"object\" && !(result.data instanceof Blob))\n                {\n                    context.state.type=\"object\"\n                    context.state.resultData=result.data;\n                    context.state.rawData=JSON.stringify(result.data);\n                    context.state.draw=helper.format(context.state.rawData,0,context.state.interface.outParam).draw;\n                    var obj=helper.format(context.state.rawData,1,context.state.interface.outParam);\n                    context.state.drawMix=obj.draw\n                    context.state.errorCount=obj.error;\n                }\n                else if(result.header[\"content-type\"] && result.header[\"content-type\"].indexOf(\"image/\")>-1)\n                {\n                    context.state.type=\"img\";\n                    context.state.rawData=\"\";\n                    context.state.imgUrl=baseUrl+path;\n                    context.state.errorCount=0;\n                }\n                else\n                {\n                    context.state.rawData=result.data;\n                    context.state.draw=result.data\n                    context.state.drawMix=result.data;\n                    context.state.errorCount=0;\n                }\n                var AfterCode=$.trim(context.state.interface.after);\n                if(AfterCode)\n                {\n                    helper.runAfter(AfterCode,result.status,result.header,result.data);\n                }\n                return {\n                    code:200\n                }\n            })\n        },\n        save:function (context) {\n            var method=context.state.interface.method;\n            var baseUrl=$.trim(context.state.baseUrl);\n            var path=$.trim(context.state.interface.url);\n            if(!method || !baseUrl || !path)\n            {\n                return new Promise(function (resolve,reject) {\n                    var obj={};\n                    obj.code=0;\n                    obj.msg=\"方法，url和路由地址不能为空!\"\n                    resolve(obj)\n                });\n            }\n            var param=[];\n            context.state.param.forEach(function (obj) {\n                if(obj.name)\n                {\n                    var value=obj.value;\n                    if(obj.selValue)\n                    {\n                        if(value)\n                        {\n                            var v=obj.selValue;\n                            if(value.indexOf(v)==-1)\n                            {\n                                value.push(v);\n                            }\n                        }\n                        else\n                        {\n                            value=[obj.selValue]\n                        }\n                    }\n                    else\n                    {\n                        if(!value)\n                        {\n                            value=[];\n                        }\n                    }\n                    param.push({\n                        name:obj.name,\n                        remark:obj.remark,\n                        value:value\n                    })\n                }\n            })\n            var query=[];\n            context.getters.querySave.forEach(function (obj) {\n                var value=obj.value;\n                if(obj.selValue)\n                {\n                    if(value)\n                    {\n                        var v=obj.selValue;\n                        if(value.indexOf(v)==-1)\n                        {\n                            value.push(v);\n                        }\n                    }\n                    else\n                    {\n                        value=[obj.selValue]\n                    }\n                }\n                else\n                {\n                    if(!value)\n                    {\n                        value=[];\n                    }\n                }\n                query.push({\n                    name:obj.name,\n                    must:obj.must,\n                    remark:obj.remark,\n                    value:value\n                })\n            })\n            var header=[];\n            context.getters.headerSave.forEach(function (obj) {\n                header.push({\n                    name:obj.name,\n                    value:obj.value,\n                    remark:obj.remark\n                })\n            })\n            var body=[],bUpload=false;\n            if(method==\"POST\" || method==\"PUT\")\n            {\n                if(context.state.bodyInfo.type==0)\n                {\n                    context.getters.bodySave.forEach(function (obj) {\n                        if(obj.type==0)\n                        {\n                            var value=obj.value;\n                            if(obj.selValue)\n                            {\n                                if(value)\n                                {\n                                    var v=obj.selValue;\n                                    if(value.indexOf(v)==-1)\n                                    {\n                                        value.push(v);\n                                    }\n                                }\n                                else\n                                {\n                                    value=[obj.selValue]\n                                }\n                            }\n                            else\n                            {\n                                if(!value)\n                                {\n                                    value=[];\n                                }\n                            }\n                            body.push({\n                                name:obj.name,\n                                type:0,\n                                must:obj.must,\n                                remark:obj.remark,\n                                value:value\n                            })\n                        }\n                        else if(obj.type==1)\n                        {\n                            body.push({\n                                name:obj.name,\n                                type:1,\n                                must:obj.must,\n                                remark:obj.remark\n                            })\n                            bUpload=true;\n                        }\n                    })\n                    var contentTypeKey;\n                    for(var key in header)\n                    {\n                        if(key.toLowerCase()==\"content-type\")\n                        {\n                            contentTypeKey=key;\n                            break;\n                        }\n                    }\n                    if(bUpload)\n                    {\n                        header[contentTypeKey?contentTypeKey:\"content-type\"]=\"multipart/form-data\"\n                    }\n                }\n            }\n            var result=[];\n            if(context.state.resultData)\n            {\n                for(var key in context.state.resultData)\n                {\n                    var resultObj=helper.findObj(context.state.interface.outParam,key);\n                    helper.handleResultData(key,context.state.resultData[key],result,resultObj)\n                }\n            }\n            var outInfo;\n            if(context.state.type==\"object\")\n            {\n                outInfo={\n                    type:0,\n                    rawRemark:\"\",\n                    rawMock:\"\",\n                }\n            }\n            else\n            {\n                outInfo={\n                    type:1,\n                    rawRemark:context.state.interface.outInfo?context.state.interface.outInfo.rawRemark:\"\",\n                    rawMock:context.state.interface.outInfo?context.state.interface.outInfo.rawMock:\"\",\n                }\n            }\n            var obj={\n                _id:context.state.interface._id?context.state.interface._id:null,\n                method:method,\n                url:path,\n                queryParam:query,\n                header:header,\n                bodyParam:body,\n                outParam:result,\n                restParam:param,\n                group:{\n                    _id:context.state.hash?context.state.hash:context.state.interface.group._id\n                },\n                name:context.state.hash?\"\":context.state.interface.name,\n                remark:context.state.hash?\"\":context.state.interface.remark,\n                owner:context.state.hash?\"\":context.state.interface.owner,\n                editor:context.state.hash?\"\":context.state.interface.editor,\n                createdAt:context.state.hash?\"\":context.state.interface.createdAt,\n                updatedAt:context.state.hash?\"\":context.state.interface.updatedAt,\n                finish:context.state.interface.finish,\n                outInfo:outInfo,\n                before:context.state.interface.before,\n                after:context.state.interface.after\n            }\n            if(method==\"POST\" || method==\"PUT\")\n            {\n                obj.bodyInfo=context.state.bodyInfo;\n            }\n            session.set(\"newInterface\",JSON.stringify(obj));\n            var bMatchUrl=false;\n            if(baseUrl!=\"MockServer\")\n            {\n                for(var i=0;i<context.state.interface.baseUrl.length;i++)\n                {\n                    var reg=new RegExp(context.state.interface.baseUrl[i]);\n                    if(reg.test(baseUrl))\n                    {\n                        bMatchUrl=true;\n                        break;\n                    }\n                }\n            }\n            else\n            {\n                bMatchUrl=true;\n            }\n            if(bMatchUrl)\n            {\n                location.href=\"../projectinfo/projectinfo.html\"\n            }\n            else\n            {\n                $.confirm(\"检测到当前根Url不在BaseUrl之内，是否自动添加\",function () {\n                    $.startHud();\n                    net.put(\"/project/addurl\",{\n                        id:session.get(\"projectId\"),\n                        url:baseUrl\n                    }).then(function (data) {\n                        $.stopHud();\n                        if(data.code==200)\n                        {\n                            $.notify(\"添加baseUrl成功\",1);\n                            setTimeout(function () {\n                                location.href=\"../projectinfo/projectinfo.html\"\n                            },1200)\n\n                        }\n                        else\n                        {\n                            location.href=\"../projectinfo/projectinfo.html\"\n                        }\n                    })\n                },function () {\n                    location.href=\"../projectinfo/projectinfo.html\"\n                })\n            }\n        },\n        init:function (context) {\n            var hash=location.hash.substr(1);\n            if(hash)\n            {\n                context.state.hash=hash;\n                return net.get(\"/project/info\",{\n                    id:session.get(\"projectId\")\n                }).then(function (data) {\n                    if(data.code==200)\n                    {\n                        context.commit(\"initData\",{\n                            url:\"\",\n                            baseUrl:data.data.baseUrls,\n                            queryParam:[],\n                            restParam:[],\n                            bodyParam:[],\n                            header:[],\n                            outParam:[],\n                            param:[],\n                            method:\"GET\",\n                            bodyInfo:{\n                                type:0,\n                                rawType:0,\n                                rawTextRemark:\"\",\n                                rawFileRemark:\"\",\n                                rawText:\"\",\n                            },\n                            finish:0,\n                            before:\"\",\n                            after:\"\"\n                        });\n                    }\n                    return data;\n                })\n            }\n            else\n            {\n                return net.get(\"/interface/item\",{\n                    id:session.get(\"interfaceId\"),\n                    group:session.get(\"groupId\"),\n                    run:1\n                }).then(function (data) {\n                    if(data.code==200)\n                    {\n                        context.commit(\"initData\",data.data);\n                    }\n                    else\n                    {\n                        setTimeout(function () {\n                            location.href=\"../projectinfo/projectinfo.html\"\n                        },1200)\n                    }\n                    return data;\n                })\n            }\n        }\n    }\n})\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./web/run/store.js\n// module id = 45\n// module chunks = 0"],"sourceRoot":""}